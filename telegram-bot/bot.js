require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

// –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
const token = process.env.BOT_TOKEN || 'YOUR_BOT_TOKEN';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
console.log('üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');
if (!token || token === 'YOUR_BOT_TOKEN') {
    console.error('‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
    process.exit(1);
}
console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', token.substring(0, 10) + '...');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3500;
const USE_WEBHOOK = process.env.USE_WEBHOOK === 'true';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
let bot;

if (USE_WEBHOOK) {
    // Webhook —Ä–µ–∂–∏–º (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)
    bot = new TelegramBot(token, { webHook: true });
    bot.setWebHook(`${process.env.WEBHOOK_URL}/bot${token}`);
    
    // –°–æ–∑–¥–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä –¥–ª—è webhook
    const express = require('express');
    const app = express();
    
    app.use(express.json());
    
    // Endpoint –¥–ª—è webhook
    app.post(`/bot${token}`, (req, res) => {
        bot.processUpdate(req.body);
        res.sendStatus(200);
    });
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    app.listen(PORT, () => {
        console.log(`üåê Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
        console.log(`üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://pytuchet.vercel.app/`);
    });
} else {
    // Polling —Ä–µ–∂–∏–º (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    bot = new TelegramBot(token, { polling: true });
    console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ polling —Ä–µ–∂–∏–º–µ');
    console.log(`üì± –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://pytuchet.vercel.app/`);
}

// URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const webAppUrl = 'https://pytuchet.vercel.app/';

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const firstName = msg.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    
    console.log(`üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${firstName} (ID: ${chatId})`);
    
    // –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const options = {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                        web_app: { url: webAppUrl }
                    }
                ]
            ]
        }
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—É—Ç—ë–≤–æ–π —É—á—ë—Ç!\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:`, options);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    
    const helpText = `
ü§ñ *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É –ü—É—Ç—ë–≤–æ–π —É—á—ë—Ç*

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ /app - –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–µ–±-–≤–µ—Ä—Å–∏–∏!
    `;
    
    bot.sendMessage(chatId, helpText, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /app
bot.onText(/\/app/, (msg) => {
    const chatId = msg.chat.id;
    
    const options = {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                        web_app: { url: webAppUrl }
                    }
                ],
                [
                    {
                        text: 'üîó –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ',
                        url: webAppUrl
                    }
                ]
            ]
        }
    };
    
    bot.sendMessage(chatId, 'üì± *–ü—É—Ç—ë–≤–æ–π —É—á—ë—Ç*\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', { 
        parse_mode: 'Markdown',
        ...options 
    });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const messageText = msg.text;
    
    console.log(`üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${messageText}" –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${chatId}`);
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
    if (messageText && !messageText.startsWith('/')) {
        const options = {
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                            web_app: { url: webAppUrl }
                        }
                    ]
                ]
            }
        };
        
        bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:', options);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ polling –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});