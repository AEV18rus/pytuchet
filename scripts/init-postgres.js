// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local
require('dotenv').config({ path: '.env.local' });

const { sql } = require('@vercel/postgres');

async function initPostgresTables() {
  try {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL —Ç–∞–±–ª–∏—Ü...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã shifts
    await sql`
      CREATE TABLE IF NOT EXISTS shifts (
        id SERIAL PRIMARY KEY,
        date TEXT NOT NULL,
        hours REAL NOT NULL,
        steam_bath INTEGER NOT NULL DEFAULT 0,
        brand_steam INTEGER NOT NULL DEFAULT 0,
        intro_steam INTEGER NOT NULL DEFAULT 0,
        scrubbing INTEGER NOT NULL DEFAULT 0,
        masters INTEGER NOT NULL DEFAULT 1,
        total REAL NOT NULL,
        hourly_rate REAL NOT NULL,
        steam_bath_price REAL NOT NULL,
        brand_steam_price REAL NOT NULL,
        intro_steam_price REAL NOT NULL,
        scrubbing_price REAL NOT NULL
      )
    `;
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ shifts —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã prices
    await sql`
      CREATE TABLE IF NOT EXISTS prices (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL UNIQUE,
        price REAL NOT NULL
      )
    `;
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ prices —Å–æ–∑–¥–∞–Ω–∞');

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
    const defaultPrices = [
      { name: '–ü–æ—á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞', price: 400 },
      { name: '–ü—É—Ç–µ–≤–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', price: 3500 },
      { name: '–§–∏—Ä–º–µ–Ω–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', price: 4200 },
      { name: '–û–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', price: 2500 },
      { name: '–°–∫—Ä–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ', price: 1200 }
    ];

    for (const price of defaultPrices) {
      await sql`
        INSERT INTO prices (name, price)
        VALUES (${price.name}, ${price.price})
        ON CONFLICT (name) DO NOTHING
      `;
    }
    console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PostgreSQL:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
initPostgresTables();