// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
process.env.POSTGRES_URL = "postgresql://neondb_owner:npg_FuYknM4g3rji@ep-damp-queen-a4y4suae-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require";

const { addShift, createPayout, initDatabase } = require('../src/lib/db.ts');

async function createTestData() {
  try {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    await initDatabase();
    
    const userId = 23; // ID –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–º–µ–Ω—ã –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2024...');
    
    // –°–º–µ–Ω—ã –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2024 (–∑–∞—Ä–∞–±–æ—Ç–æ–∫ 15000 ‚ÇΩ)
    const augustShifts = [
      {
        user_id: userId,
        date: '2024-08-05',
        hours: 8,
        steam_bath: 2,
        brand_steam: 1,
        intro_steam: 0,
        scrubbing: 1,
        zaparnik: 0,
        masters: 1,
        total: 5000,
        hourly_rate: 300,
        steam_bath_price: 3000,
        brand_steam_price: 4200,
        intro_steam_price: 2500,
        scrubbing_price: 1200,
        zaparnik_price: 0,
        services: JSON.stringify(['–ü—É—Ç–µ–≤–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–§–∏—Ä–º–µ–Ω–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–°–∫—Ä–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ']),
        service_prices: JSON.stringify([3000, 4200, 1200])
      },
      {
        user_id: userId,
        date: '2024-08-15',
        hours: 10,
        steam_bath: 3,
        brand_steam: 0,
        intro_steam: 1,
        scrubbing: 2,
        zaparnik: 1,
        masters: 1,
        total: 10000,
        hourly_rate: 300,
        steam_bath_price: 3000,
        brand_steam_price: 4200,
        intro_steam_price: 2500,
        scrubbing_price: 1200,
        zaparnik_price: 0,
        services: JSON.stringify(['–ü—É—Ç–µ–≤–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–û–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–°–∫—Ä–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ']),
        service_prices: JSON.stringify([9000, 2500, 2400])
      }
    ];
    
    for (const shift of augustShifts) {
      await addShift(shift);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–º–µ–Ω–∞ –Ω–∞ ${shift.date} –Ω–∞ —Å—É–º–º—É ${shift.total} ‚ÇΩ`);
    }
    
    console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≤—ã–ø–ª–∞—Ç—ã –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2024...');
    
    // –í—ã–ø–ª–∞—Ç—ã –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2024 (20000 ‚ÇΩ - –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ 5000 ‚ÇΩ)
    const augustPayouts = [
      {
        user_id: userId,
        month: '2024-08',
        amount: 10000,
        date: '2024-08-10',
        comment: '–ü–µ—Ä–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞'
      },
      {
        user_id: userId,
        month: '2024-08',
        amount: 10000,
        date: '2024-08-20',
        comment: '–í—Ç–æ—Ä–∞—è –≤—ã–ø–ª–∞—Ç–∞'
      }
    ];
    
    for (const payout of augustPayouts) {
      await createPayout(payout);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤—ã–ø–ª–∞—Ç–∞ ${payout.amount} ‚ÇΩ –∑–∞ ${payout.month}`);
    }
    
    console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–º–µ–Ω—ã –¥–ª—è —Å–µ–Ω—Ç—è–±—Ä—è 2024...');
    
    // –°–º–µ–Ω—ã –¥–ª—è —Å–µ–Ω—Ç—è–±—Ä—è 2024 (–∑–∞—Ä–∞–±–æ—Ç–æ–∫ 12000 ‚ÇΩ)
    const septemberShifts = [
      {
        user_id: userId,
        date: '2024-09-10',
        hours: 8,
        steam_bath: 2,
        brand_steam: 1,
        intro_steam: 1,
        scrubbing: 0,
        zaparnik: 0,
        masters: 1,
        total: 12000,
        hourly_rate: 300,
        steam_bath_price: 3000,
        brand_steam_price: 4200,
        intro_steam_price: 2500,
        scrubbing_price: 1200,
        zaparnik_price: 0,
        services: JSON.stringify(['–ü—É—Ç–µ–≤–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–§–∏—Ä–º–µ–Ω–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ', '–û–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∞—Ä–µ–Ω–∏–µ']),
        service_prices: JSON.stringify([6000, 4200, 2500])
      }
    ];
    
    for (const shift of septemberShifts) {
      await addShift(shift);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–º–µ–Ω–∞ –Ω–∞ ${shift.date} –Ω–∞ —Å—É–º–º—É ${shift.total} ‚ÇΩ`);
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –°–≤–æ–¥–∫–∞:');
    console.log('  –ê–≤–≥—É—Å—Ç 2024: –∑–∞—Ä–∞–±–æ—Ç–æ–∫ 15000 ‚ÇΩ, –≤—ã–ø–ª–∞—Ç—ã 20000 ‚ÇΩ (–ø–µ—Ä–µ–ø–ª–∞—Ç–∞ 5000 ‚ÇΩ)');
    console.log('  –°–µ–Ω—Ç—è–±—Ä—å 2024: –∑–∞—Ä–∞–±–æ—Ç–æ–∫ 12000 ‚ÇΩ');
    console.log('  –û–∂–∏–¥–∞–µ—Ç—Å—è: –ø–µ—Ä–µ–Ω–æ—Å 5000 ‚ÇΩ –∏–∑ –∞–≤–≥—É—Å—Ç–∞ –≤ —Å–µ–Ω—Ç—è–±—Ä—å');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

createTestData()
  .then(() => {
    console.log('–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π:', error);
    process.exit(1);
  });