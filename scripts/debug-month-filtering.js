const { sql } = require('@vercel/postgres');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ
process.env.POSTGRES_URL = "postgresql://neondb_owner:npg_FuYknM4g3rji@ep-damp-queen-a4y4suae-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require";

async function debugMonthFiltering() {
  try {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–º–µ–Ω –ø–æ –º–µ—Å—è—Ü–∞–º...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersResult = await sql`SELECT id, first_name, last_name FROM users ORDER BY first_name`;
    console.log('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:');
    usersResult.rows.forEach(user => {
      console.log(`  - ID: ${user.id}, –ò–º—è: ${user.first_name} ${user.last_name || ''}`);
    });
    
    // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Aleksey
    const alexeyUser = usersResult.rows.find(u => u.first_name.toLowerCase().includes('aleksey'));
    if (!alexeyUser) {
      console.log('\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Aleksey –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log(`\nüéØ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Aleksey: ID ${alexeyUser.id}`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã shifts
    const tableStructure = await sql`
      SELECT column_name, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'shifts' 
      ORDER BY ordinal_position
    `;
    
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã shifts:');
    tableStructure.rows.forEach(col => {
      console.log(`  - ${col.column_name}: ${col.data_type}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–º–µ–Ω—ã Aleksey
    const allShiftsResult = await sql`
      SELECT id, date, total,
             TO_CHAR(DATE_TRUNC('month', date::date), 'YYYY-MM') as month_from_date
      FROM shifts 
      WHERE user_id = ${alexeyUser.id}
      ORDER BY date DESC
    `;
    
    console.log(`\nüìä –í—Å–µ —Å–º–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Aleksey (${allShiftsResult.rows.length} –∑–∞–ø–∏—Å–µ–π):`);
    allShiftsResult.rows.forEach(shift => {
      console.log(`  - ID: ${shift.id}`);
      console.log(`    –î–∞—Ç–∞ —Å–º–µ–Ω—ã: ${shift.date} (–º–µ—Å—è—Ü: ${shift.month_from_date})`);
      console.log(`    –°—É–º–º–∞: ${shift.total} ‚ÇΩ`);
      console.log('');
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –æ–∫—Ç—è–±—Ä—è 2024
    const octoberShifts = await sql`
      SELECT id, date, total
      FROM shifts 
      WHERE user_id = ${alexeyUser.id}
      AND TO_CHAR(DATE_TRUNC('month', date::date), 'YYYY-MM') = '2024-10'
      ORDER BY date DESC
    `;
    
    console.log(`\nüóìÔ∏è –°–º–µ–Ω—ã Aleksey –∑–∞ –æ–∫—Ç—è–±—Ä—å 2024 (–ø–æ –¥–∞—Ç–µ —Å–º–µ–Ω—ã): ${octoberShifts.rows.length} –∑–∞–ø–∏—Å–µ–π`);
    octoberShifts.rows.forEach(shift => {
      console.log(`  - ID: ${shift.id}, –î–∞—Ç–∞: ${shift.date}, –°—É–º–º–∞: ${shift.total} ‚ÇΩ`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –æ–∫—Ç—è–±—Ä—è 2025
    const october2025Shifts = await sql`
      SELECT id, date, total
      FROM shifts 
      WHERE user_id = ${alexeyUser.id}
      AND TO_CHAR(DATE_TRUNC('month', date::date), 'YYYY-MM') = '2025-10'
      ORDER BY date DESC
    `;
    
    console.log(`\nüóìÔ∏è –°–º–µ–Ω—ã Aleksey –∑–∞ –æ–∫—Ç—è–±—Ä—å 2025 (–ø–æ –¥–∞—Ç–µ —Å–º–µ–Ω—ã): ${october2025Shifts.rows.length} –∑–∞–ø–∏—Å–µ–π`);
    october2025Shifts.rows.forEach(shift => {
      console.log(`  - ID: ${shift.id}, –î–∞—Ç–∞: ${shift.date}, –°—É–º–º–∞: ${shift.total} ‚ÇΩ`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –¥–ª—è 2024-10
    console.log('\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å –¥–ª—è 2024-10...');
    const apiUrl2024 = `http://localhost:3000/api/shifts?user_id=${alexeyUser.id}&month=2024-10`;
    console.log(`URL: ${apiUrl2024}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –¥–ª—è 2025-10
    console.log('\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å –¥–ª—è 2025-10...');
    const apiUrl2025 = `http://localhost:3000/api/shifts?user_id=${alexeyUser.id}&month=2025-10`;
    console.log(`URL: ${apiUrl2025}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

debugMonthFiltering();